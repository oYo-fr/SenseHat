/* 
 * Sense HAT API
 *
 * Sense HAT API Express wrapper (http://pythonhosted.org/sense-hat/api/#sense-hat-api-reference).
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing LEDApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LEDApiTests
    {
        private LEDApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LEDApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LEDApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' LEDApi
            //Assert.IsInstanceOfType(typeof(LEDApi), instance, "instance is a LEDApi");
        }

        
        /// <summary>
        /// Test LEDMatrixClearPut
        /// </summary>
        [Test]
        public void LEDMatrixClearPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Colour colour = null;
            //instance.LEDMatrixClearPut(colour);
            
        }
        
        /// <summary>
        /// Test LEDMatrixFlipHPut
        /// </summary>
        [Test]
        public void LEDMatrixFlipHPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? redraw = null;
            //var response = instance.LEDMatrixFlipHPut(redraw);
            //Assert.IsInstanceOf<List<Colour>> (response, "response is List<Colour>");
        }
        
        /// <summary>
        /// Test LEDMatrixFlipVPut
        /// </summary>
        [Test]
        public void LEDMatrixFlipVPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? redraw = null;
            //var response = instance.LEDMatrixFlipVPut(redraw);
            //Assert.IsInstanceOf<List<Colour>> (response, "response is List<Colour>");
        }
        
        /// <summary>
        /// Test LEDMatrixGetPixelGet
        /// </summary>
        [Test]
        public void LEDMatrixGetPixelGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? x = null;
            //int? y = null;
            //var response = instance.LEDMatrixGetPixelGet(x, y);
            //Assert.IsInstanceOf<Colour> (response, "response is Colour");
        }
        
        /// <summary>
        /// Test LEDMatrixGetPixelsGet
        /// </summary>
        [Test]
        public void LEDMatrixGetPixelsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.LEDMatrixGetPixelsGet();
            //Assert.IsInstanceOf<List<Colour>> (response, "response is List<Colour>");
        }
        
        /// <summary>
        /// Test LEDMatrixLowLightPut
        /// </summary>
        [Test]
        public void LEDMatrixLowLightPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? value = null;
            //instance.LEDMatrixLowLightPut(value);
            
        }
        
        /// <summary>
        /// Test LEDMatrixSetPixelPut
        /// </summary>
        [Test]
        public void LEDMatrixSetPixelPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Pixel pixel = null;
            //instance.LEDMatrixSetPixelPut(pixel);
            
        }
        
        /// <summary>
        /// Test LEDMatrixSetPixelsPut
        /// </summary>
        [Test]
        public void LEDMatrixSetPixelsPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<Pixel> pixelList = null;
            //var response = instance.LEDMatrixSetPixelsPut(pixelList);
            //Assert.IsInstanceOf<List<Pixel>> (response, "response is List<Pixel>");
        }
        
        /// <summary>
        /// Test LEDMatrixSetRotationPut
        /// </summary>
        [Test]
        public void LEDMatrixSetRotationPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //decimal? r = null;
            //bool? redraw = null;
            //instance.LEDMatrixSetRotationPut(r, redraw);
            
        }
        
        /// <summary>
        /// Test LEDMatrixShowLetterPut
        /// </summary>
        [Test]
        public void LEDMatrixShowLetterPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string s = null;
            //List<Colour> colours = null;
            //instance.LEDMatrixShowLetterPut(s, colours);
            
        }
        
        /// <summary>
        /// Test LEDMatrixShowMessagePut
        /// </summary>
        [Test]
        public void LEDMatrixShowMessagePutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string textString = null;
            //float? scrollSpeed = null;
            //List<Colour> colours = null;
            //instance.LEDMatrixShowMessagePut(textString, scrollSpeed, colours);
            
        }
        
    }

}
