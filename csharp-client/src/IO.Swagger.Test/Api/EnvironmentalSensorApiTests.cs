/* 
 * Sense HAT API
 *
 * Sense HAT API Express wrapper (http://pythonhosted.org/sense-hat/api/#sense-hat-api-reference).
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing EnvironmentalSensorApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class EnvironmentalSensorApiTests
    {
        private EnvironmentalSensorApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new EnvironmentalSensorApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of EnvironmentalSensorApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' EnvironmentalSensorApi
            //Assert.IsInstanceOfType(typeof(EnvironmentalSensorApi), instance, "instance is a EnvironmentalSensorApi");
        }

        
        /// <summary>
        /// Test EnvironmentalSensorsGetHumidityGet
        /// </summary>
        [Test]
        public void EnvironmentalSensorsGetHumidityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.EnvironmentalSensorsGetHumidityGet();
            //Assert.IsInstanceOf<decimal?> (response, "response is decimal?");
        }
        
        /// <summary>
        /// Test EnvironmentalSensorsGetPressureGet
        /// </summary>
        [Test]
        public void EnvironmentalSensorsGetPressureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.EnvironmentalSensorsGetPressureGet();
            //Assert.IsInstanceOf<decimal?> (response, "response is decimal?");
        }
        
        /// <summary>
        /// Test EnvironmentalSensorsGetTemperatureFromHumidityGet
        /// </summary>
        [Test]
        public void EnvironmentalSensorsGetTemperatureFromHumidityGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.EnvironmentalSensorsGetTemperatureFromHumidityGet();
            //Assert.IsInstanceOf<decimal?> (response, "response is decimal?");
        }
        
        /// <summary>
        /// Test EnvironmentalSensorsGetTemperatureFromPressureGet
        /// </summary>
        [Test]
        public void EnvironmentalSensorsGetTemperatureFromPressureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.EnvironmentalSensorsGetTemperatureFromPressureGet();
            //Assert.IsInstanceOf<decimal?> (response, "response is decimal?");
        }
        
        /// <summary>
        /// Test EnvironmentalSensorsGetTemperatureGet
        /// </summary>
        [Test]
        public void EnvironmentalSensorsGetTemperatureGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.EnvironmentalSensorsGetTemperatureGet();
            //Assert.IsInstanceOf<decimal?> (response, "response is decimal?");
        }
        
    }

}
